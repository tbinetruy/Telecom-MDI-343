#+TITLE: MDI343 TP 1

* Question 1

/Étudiez la fonction ~rand_gauss(n, mu, sigmas)~ qui engendre *n* observations selon la loi normale multi-dimensionnelle de moyenne le vecteur ~mu~ et de matrice de covariance la matrice diagonale de diagonale ~sigmas~ $= [\sigma 1 , \sigma 2]$ i.e., la matrice de variance covariance est : ~((σ_1 0)(0 σ_2))~. Générer ensuite plusieurs jeux de données à l’aide des fonctions ~rand_bi_gauss~, ~rand_clown~ et ~rand_checkers~ pour différents paramètres d’entrée n,mu,sigma. Que renvoient ces fonctions ? À quoi correspond la seconde variable de sortie ?/

#+BEGIN_SRC python :session default :exports both :results output :tangle yes
import importlib.util
import numpy as np

spec = importlib.util.spec_from_file_location("module.name", "/home/thomas/Documents/Telecom/cours/Machine Learning (MDI 343)/TP/tpperceptronsource.py")

tpsource = importlib.util.module_from_spec(spec)
spec.loader.exec_module(tpsource)
a = tpsource.rand_gauss(2000)
print(a)
#+END_SRC

#+RESULTS:
: [[0.88127879 0.95995674]
:  [0.75388613 1.20652334]
:  [0.98315626 0.92841227]
:  ...
:  [1.0359918  1.09952174]
:  [0.89638982 0.88869041]
:  [1.04000971 0.90468478]]


#+BEGIN_SRC python :session default :exports both :results output :tangle yes
import matplotlib.pyplot as plt

x = a[:, 0]
y = a[:, 1]
#+END_SRC

#+RESULTS:

#+BEGIN_SRC python :session default :exports both :results file :tangle yes
path = "./img/q1.png"
plt.figure(0)
plt.scatter(x, y)
plt.savefig(path)
plt.close()

path
#+END_SRC

#+RESULTS:
[[file:./img/q1.png]]

Essayons maintenant de generer d'autre données à l'aide des fonctions ~data_bi_gauss~, ~data_rand_clown~ et ~data_rand_checkers~. Ces fonctions retourne une data structure contenant en position 0 les vecteurs explicatifs et en position 1 leurs classification (-1 ou +1) :

#+BEGIN_SRC python :session default :exports both :results output :tangle yes
data_bi_gauss = tpsource.rand_bi_gauss()
data_rand_clown = tpsource.rand_clown()
data_rand_checkers = tpsource.rand_checkers()

print(data_bi_gauss)
#+END_SRC

#+RESULTS:
#+begin_example
(array([[-0.77813823, -0.93085061],
       [-1.05256462, -1.04282868],
       [ 1.11654998,  1.01826926],
       [-1.00528148, -0.9830519 ],
       [ 0.9220172 ,  0.99667601],
       [ 0.96341217,  0.98825422],
       [-1.00253108, -1.02209741],
       [ 0.88837871,  0.97634055],
       [ 0.94990959,  0.92331245],
       [-0.91297954, -1.03921991],
       [-0.98723816, -1.18651192],
       [ 1.07402035,  0.94649953],
       [ 0.83545552,  0.95593238],
       [-0.98754341, -0.95613646],
       [ 0.99356795,  1.11060271],
       [ 0.96885312,  0.8495458 ],
       [ 1.21926176,  0.87024079],
       [-0.95146529, -0.92277281],
       [ 0.97975986,  0.98006123],
       [-1.03524272, -1.1744264 ],
       [ 0.92975769,  1.11749098],
       [-0.92492127, -1.1006213 ],
       [-0.87191311, -1.04864649],
       [ 0.96083541,  0.99362972],
       [ 0.85870254,  0.92871705],
       [-1.16871436, -0.99473203],
       [-1.09513093, -1.22654236],
       [ 1.01125668,  0.88132788],
       [ 0.98051484,  0.85650555],
       [ 1.00950802,  0.93938635],
       [ 1.00302348,  1.10306236],
       [ 1.09211055,  0.88655356],
       [-0.74649518, -0.99674672],
       [-1.0320824 , -0.85760732],
       [ 1.05182548,  1.19554685],
       [-1.10507103, -0.99676213],
       [-0.85380126, -1.15900734],
       [ 1.05027029,  1.05946818],
       [-0.89653075, -1.21370622],
       [ 1.18095847,  0.9500377 ],
       [ 0.98567292,  0.94639979],
       [-1.06112909, -0.91212536],
       [-0.98186502, -1.17187187],
       [-1.33051215, -1.07487945],
       [-0.80004389, -1.01603966],
       [-0.9128518 , -1.12410519],
       [ 0.89576369,  0.81650317],
       [ 1.01178853,  0.97853334],
       [-1.01429381, -0.92786321],
       [ 0.9520922 ,  1.11247482],
       [ 0.95630596,  1.05057875],
       [ 1.04325496,  0.96753576],
       [-0.87917695, -1.09081643],
       [ 1.1040678 ,  1.09879125],
       [ 1.02953952,  0.97343029],
       [ 0.84738816,  1.11014415],
       [-1.06362366, -0.78723619],
       [-1.11480942, -0.92132586],
       [-1.09475829, -0.88660681],
       [-1.07510812, -0.97439199],
       [ 0.9573909 ,  1.06474581],
       [ 0.99035805,  0.87825737],
       [ 0.98872624,  0.99787591],
       [ 1.08799531,  1.10277935],
       [ 1.17548196,  1.04021676],
       [ 0.96393529,  0.94053206],
       [ 1.10687241,  0.93329503],
       [ 0.99906268,  0.93460579],
       [-1.11294723, -0.98912028],
       [-0.95712248, -0.96614313],
       [-1.11859149, -0.9315436 ],
       [ 0.89961121,  1.01838443],
       [ 0.99216005,  0.91441341],
       [ 1.02101508,  0.74498248],
       [-0.96859143, -0.87534598],
       [ 1.03635503,  1.19244007],
       [-0.93129939, -0.96941595],
       [-1.07332489, -1.02402134],
       [ 0.71223834,  0.99615927],
       [ 1.07434242,  1.05321876],
       [-0.96267101, -0.95351523],
       [ 0.85265803,  0.99785615],
       [ 1.11106622,  0.93197774],
       [-1.0575951 , -1.00694482],
       [-1.06493691, -1.03407588],
       [-0.86251659, -0.96804148],
       [-1.127258  , -1.24996922],
       [-0.93386929, -0.8543984 ],
       [-0.98854578, -1.06039072],
       [-0.9443905 , -1.0005676 ],
       [-1.11253123, -0.93883316],
       [ 0.94267481,  0.97570007],
       [-0.81552798, -1.30967479],
       [-1.02955382, -0.95921022],
       [ 0.9798302 ,  0.86726069],
       [ 0.83331265,  1.0155491 ],
       [-1.04297788, -1.18225474],
       [-0.90985914, -0.87117434],
       [ 1.03132611,  1.1413113 ],
       [-0.95210054, -1.00149332],
       [-0.97432741, -0.95472909],
       [-1.02491822, -0.84183938],
       [ 0.92578627,  0.9676349 ],
       [-1.04908124, -0.90661692],
       [ 0.96403814,  1.11487957],
       [ 1.08649456,  0.97865808],
       [ 1.14680386,  1.02898844],
       [ 1.1310987 ,  0.97501904],
       [-0.99359986, -1.14510944],
       [ 0.94125022,  0.95648142],
       [-1.09092471, -1.02302082],
       [-1.11856309, -0.91660901],
       [ 1.17303976,  0.8619526 ],
       [ 0.99648537,  1.16899124],
       [-0.89573416, -0.96372757],
       [ 0.97724065,  0.87446577],
       [-1.06222936, -0.89643315],
       [-1.03567332, -1.09885555],
       [-0.94232109, -1.03252073],
       [-1.06046326, -1.06608746],
       [-1.1484852 , -1.01470005],
       [-0.97049589, -0.86490634],
       [ 0.93851011,  1.03627317],
       [ 1.00329189,  1.00081364],
       [-0.95329338, -0.84824878],
       [ 1.01614694,  1.00742977],
       [-1.04008107, -0.91464017],
       [-0.93927529, -1.13336839],
       [ 0.94235962,  0.90719442],
       [ 1.0785719 ,  0.9475747 ],
       [ 1.09446915,  0.98044315],
       [-1.19004417, -1.09850215],
       [-0.94438604, -0.83618002],
       [ 0.98151994,  0.99934824],
       [ 1.12844333,  1.02151499],
       [-1.0095007 , -0.91453261],
       [ 0.89372018,  1.00906482],
       [ 1.21754579,  0.96776239],
       [-1.02995599, -1.1128273 ],
       [ 0.95598144,  0.92713151],
       [ 0.79010056,  1.03731326],
       [-0.99315107, -1.03421638],
       [-1.13421866, -1.06966453],
       [-1.17520823, -1.02426935],
       [ 0.88996743,  0.9039683 ],
       [ 0.81176005,  0.96375858],
       [-0.93166673, -1.02795511],
       [-1.01824389, -0.98065276],
       [ 1.04173462,  0.95911577],
       [ 0.79902513,  0.84313797],
       [-1.10572707, -0.99306228],
       [ 1.2274029 ,  0.96334577],
       [-0.86326659, -0.98344072],
       [-0.964032  , -1.0273169 ],
       [-0.96678291, -0.97485679],
       [ 0.92688593,  1.13162477],
       [ 0.80745101,  0.99266023],
       [-0.97418217, -1.20917773],
       [ 0.84851628,  1.03878036],
       [-0.90703313, -0.97081397],
       [-0.93148674, -1.00652434],
       [-0.92956552, -1.12579343],
       [ 1.07356924,  0.9294747 ],
       [ 0.79004367,  1.06862704],
       [ 0.86470653,  0.98660587],
       [ 1.06742549,  0.94501971],
       [ 0.89528802,  1.06117683],
       [-1.22182801, -0.97299908],
       [-0.97610838, -0.94263601],
       [-0.98879557, -1.03145663],
       [-0.7658501 , -1.07529525],
       [-0.89024524, -0.72469666],
       [-0.95233272, -1.15462422],
       [ 1.03636483,  0.74958819],
       [-0.85694904, -0.9458017 ],
       [-0.77001895, -1.02290525],
       [-1.22219626, -0.98372881],
       [ 1.16280231,  0.81327561],
       [ 0.93841495,  0.94798327],
       [-0.90349621, -1.08296488],
       [ 1.00339022,  0.96704421],
       [-1.21286341, -1.01938677],
       [ 0.98066808,  0.94380235],
       [ 1.01253052,  0.98710917],
       [-1.05098934, -0.89264964],
       [ 1.12228646,  0.90555768],
       [-1.16168289, -0.94587066],
       [ 0.9088357 ,  1.08413944],
       [ 1.20033799,  0.93709553],
       [-1.07458218, -1.05534541],
       [-1.02731157, -1.11138962],
       [ 0.79379359,  0.93034618],
       [ 1.0148559 ,  1.03333413],
       [ 0.943304  ,  1.01055038],
       [ 0.90776155,  1.01196132],
       [ 1.27016731,  0.98389558],
       [-0.88159641, -1.05111981],
       [-1.01916797, -0.96840787],
       [ 0.95672931,  1.09481412],
       [-1.10995089, -1.04460827]]), array([-1., -1.,  1., -1.,  1.,  1., -1.,  1.,  1., -1., -1.,  1.,  1.,
       -1.,  1.,  1.,  1., -1.,  1., -1.,  1., -1., -1.,  1.,  1., -1.,
       -1.,  1.,  1.,  1.,  1.,  1., -1., -1.,  1., -1., -1.,  1., -1.,
        1.,  1., -1., -1., -1., -1., -1.,  1.,  1., -1.,  1.,  1.,  1.,
       -1.,  1.,  1.,  1., -1., -1., -1., -1.,  1.,  1.,  1.,  1.,  1.,
        1.,  1.,  1., -1., -1., -1.,  1.,  1.,  1., -1.,  1., -1., -1.,
        1.,  1., -1.,  1.,  1., -1., -1., -1., -1., -1., -1., -1., -1.,
        1., -1., -1.,  1.,  1., -1., -1.,  1., -1., -1., -1.,  1., -1.,
        1.,  1.,  1.,  1., -1.,  1., -1., -1.,  1.,  1., -1.,  1., -1.,
       -1., -1., -1., -1., -1.,  1.,  1., -1.,  1., -1., -1.,  1.,  1.,
        1., -1., -1.,  1.,  1., -1.,  1.,  1., -1.,  1.,  1., -1., -1.,
       -1.,  1.,  1., -1., -1.,  1.,  1., -1.,  1., -1., -1., -1.,  1.,
        1., -1.,  1., -1., -1., -1.,  1.,  1.,  1.,  1.,  1., -1., -1.,
       -1., -1., -1., -1.,  1., -1., -1., -1.,  1.,  1., -1.,  1., -1.,
        1.,  1., -1.,  1., -1.,  1.,  1., -1., -1.,  1.,  1.,  1.,  1.,
        1., -1., -1.,  1., -1.]))
#+end_example

* Question 2

/Conservez quelques jeux de données afin de les utiliser dans la suite : pour chacun, il faudra sauver sous forme d’un tableau numpy à deux colonnes $X$ les données, et dans un vecteur $Y$ les labels correspondants à chaque exemple./

#+BEGIN_SRC python :session default :exports both :results output :tangle yes
def prepare_data(data):
  data_col_1 = data[0][:,0]
  data_col_2 = data[0][:,1]
  data = np.array([data_col_1, data_col_2])
  classification = data[1]
  return [data, classification]

X_bi_gauss, Y_bi_gauss = prepare_data(data_bi_gauss)
print(X_bi_gauss.shape, Y_bi_gauss.shape)
print(X_rand_clown.shape, Y_rand_clown.shape)
print(X_rand_checkers.shape, Y_rand_checkers.shape)
X_rand_clown, Y_rand_clown = prepare_data(data_rand_clown)
X_rand_checkers, Y_rand_checkers = prepare_data(data_rand_checkers)
#+END_SRC

#+RESULTS:
: (2, 200) (200,)
: (2, 200) (200,)
: (2, 192) (192,)

#+BEGIN_SRC python :session default :exports both :results output :tangle yes
print(X_rand_clown)
tpsource.plot_2d(X_rand_clown, Y_rand_clown) 
#+END_SRC

#+RESULTS:
#+begin_example
[[ 2.21455145e-01 -1.94773964e+00  6.42528598e-01  2.38220624e+00
   1.18531044e+00  7.96740663e-01 -1.51038956e-01  1.13667609e+00
   1.47760862e+00 -1.99704205e+00 -8.55327470e-01 -4.84150387e-01
   1.09050334e+00 -5.46756897e-01 -1.05980422e+00 -5.93805229e+00
   7.28812011e-01 -6.24862590e-01 -1.51077182e+00 -5.65129146e-01
  -8.37562936e-01 -2.75034733e+00  1.24902693e+00  5.84412106e-01
  -5.19142111e-02  3.45936948e+00 -8.80153002e-01 -1.50153479e+00
   1.85355707e+00  1.45326481e+00 -1.63447579e+00 -5.46488501e-01
  -1.13874299e-01 -9.36425233e-01 -1.57034695e+00 -1.75540320e-01
   1.07762848e+00 -8.83718455e-01  2.86389602e-01  1.76151202e+00
   9.44082978e-01  9.33410885e-01  6.17244673e-01 -3.85379449e+00
   1.65682418e+00  4.61258020e+00 -1.53957967e+00 -3.43333278e-01
   2.28143015e-01  3.26235434e-02  4.84023055e-02 -6.16488659e-02
  -4.15517537e+00  2.00009165e+00 -3.84922296e+00  6.22350515e-01
  -1.56092240e+00 -6.66916959e-01  7.67124706e-01  2.91634521e+00
  -3.02831254e-01  5.30677508e+00 -1.58560905e+00 -2.49843005e-01
   1.04593224e+00  3.30003009e+00  6.70299195e-01  2.02967282e+00
  -1.60313956e+00  9.53030853e-01  9.53102630e-01 -3.21887261e+00
  -7.01840256e-01  1.32316086e+00 -9.23920699e-01 -6.20097632e-02
  -1.32959968e+00  1.16808937e+00 -6.79824890e-01  6.07121267e-01
   2.70992823e+00 -1.68560041e+00  2.31636961e+00  5.00754705e+00
   1.93787907e+00 -1.76657146e+00  1.32197785e-01 -1.62407881e-01
   9.00855975e-01 -1.15305756e+00  9.46514478e-01  5.49889978e-01
  -9.41386316e-01  8.05789351e-01 -1.29576669e+00 -6.46778962e-01
   1.76375855e+00  6.04187720e-01  7.28457536e-01 -8.38219844e-01
  -5.82138469e-01  3.25262519e-01  1.30923012e+00 -2.15565886e-02
   4.27871720e-01  6.33072399e-01 -5.72371724e-01 -9.05102494e-01
  -8.47444491e-01  6.40948007e-01 -3.08498051e+00 -1.46408594e+00
   1.04049349e+00  7.49687501e-01 -8.96373295e-01 -3.10643084e+00
  -1.83767074e-01  5.90141739e-01 -2.15032320e+00 -7.13945482e-01
   1.02624796e+00  1.06516785e+00 -7.87132648e-01  1.34132977e+00
   1.36037380e+00  2.59692535e+00  9.98495927e-01  1.26898636e+00
  -5.13984486e-01 -5.01847279e-01 -3.69426363e-01 -2.17320418e+00
   2.08131443e+00 -5.28144784e-02  6.95270667e-01  2.11938261e-01
   3.72442226e+00 -7.24605715e-01 -9.59490838e-01  4.58036680e-01
   5.50753567e-01 -4.13503222e-01  1.07805255e+00 -1.11757949e+00
  -6.97834210e-01  2.36293045e+00 -1.76166105e+00 -4.59549429e-01
   5.21861228e-01 -1.00153178e+00  4.22742715e-02 -2.55725270e-01
   3.87194646e-01  3.89148021e-01  7.79062210e-01  6.72029886e-01
  -8.57723447e-01 -2.42361390e-01  1.20331128e-01 -3.04838223e+00
   3.38484071e+00  1.74001809e+00  4.95027595e-01  1.84254796e+00
  -2.45109930e-01 -4.35623195e+00 -1.36415355e+00 -2.34390683e+00
   1.06784748e+00  5.85304577e-01 -4.62405814e-01 -3.02653036e-01
  -6.10745861e-01  1.34142091e+00 -1.61546662e+00 -1.63665552e+00
  -3.80035423e-01  6.61791487e-01  3.71502970e-01 -1.02253549e+00
   1.10991257e-01  2.22089374e+00 -7.17217392e-01 -1.58148919e+00
  -6.02999870e-01  2.20229012e-02 -9.55434895e-01 -1.39039593e+00
  -1.18693396e+00  6.70801698e-01 -7.53923608e-01  1.42720425e+00
  -1.73555863e+00  3.59943369e-01 -1.05825853e+00  2.29648959e-01
   1.28779821e+00  9.03602738e-01  9.64432901e-02 -1.61551901e+00]
 [ 1.42669331e+00  5.13932902e+00  2.06072626e+00  9.21313838e-01
   2.98064360e+00  4.63261748e-01  1.20390630e+00  9.04145373e-01
   1.61543353e+00  2.12317099e+00  2.76536613e+00  2.20304954e+00
   1.34178488e+00  8.63414521e-01  2.68882063e+00 -1.20110057e+00
   1.48762660e+00 -9.36087840e-01  2.00614254e+00  3.59426865e-01
   1.24761146e+00  2.97014281e+00 -9.91477443e-01  1.39372554e+00
   3.06746767e-01  2.81496608e+00  1.04455172e+00  8.12991027e-01
   1.53174636e+00  4.79026857e-01  2.76453301e+00  1.10205757e+00
  -7.35216180e-01  2.06320598e+00  2.91483784e-01  5.79157307e-01
   2.61144604e+00  1.46661989e+00  2.34261990e+00 -1.71291081e-01
   1.61330200e+00 -4.33888205e-03  1.43720608e+00  2.60425969e-01
   4.60247673e+00  5.48756392e+00  9.42418941e-01  1.55315076e-01
   5.87250316e+00 -1.73352649e+00 -5.34751605e-01  3.34393279e-01
  -1.52701578e+00  3.15913665e+00  5.55569992e+00  3.94340043e-02
   3.21763579e+00  1.25620543e+00  6.45959129e-02  1.61885494e+00
   4.17439003e-01  4.13430134e-01  2.17450404e-01 -1.19174897e+00
   4.35871755e+00  6.27039490e-01 -5.81563954e-01  3.46909831e+00
  -8.62547143e-01  1.60255842e+00  6.65636138e-01  2.84072829e+00
   5.07483594e-01  9.24539407e-01  1.25539584e+00  4.33123490e-01
   2.28476087e+00  2.97407045e+00  5.08087832e-01 -3.76196465e-01
   3.50389133e+00  4.44971600e+00  2.95910195e+00  1.13956861e+00
   3.26523180e+00  4.62655125e+00 -1.38302144e-01  1.38562163e+00
  -6.87703603e-01  4.51093179e+00 -5.15797085e-01  1.57392050e+00
   6.10947658e+00  2.05904025e+00  2.62888794e+00  9.44242111e-01
   2.42720317e+00  9.10139794e-03  6.40762046e-02  7.04385911e-01
   1.60056031e+00  1.24292112e+00  1.84831616e-01  2.88252006e-01
   3.57556653e+00  1.93032754e-01  4.05385865e+00  8.14097153e-01
   5.56750089e-01  7.37215321e-01  5.09440301e+00  1.47702964e+00
   4.89067466e+00 -8.78462481e-02  1.24393448e+00  8.03883273e-01
   7.70134137e-01  3.64551441e-01  4.65954837e+00 -1.13228903e+00
   5.59823649e-01  2.73466916e+00  6.94699247e+00  4.95801500e+00
   1.24486099e+00 -3.38638014e-01  6.50980633e-01 -9.48692171e-01
   3.25203539e+00  2.33963596e+00  7.87951249e-01 -7.06108366e-02
   5.09741650e+00  1.88553571e+00  2.65093513e+00  4.50432950e+00
  -7.03903652e-01  1.59063525e+00  2.90881438e+00  1.59791293e-01
   1.53396579e-01  9.96260187e-01  5.09576101e-01  3.35468332e+00
   6.56802957e-01  3.44132467e-01  1.20619071e+00  5.78773504e-01
   1.18297578e+00  8.31729051e-01  5.25455829e-01 -1.90301646e-01
  -5.37400384e-01  1.56549120e+00  1.80327238e+00  1.45173604e+00
  -7.22872852e-01  1.03392865e+00  6.00851674e-01  1.90983334e+00
   2.75466030e+00  1.32934024e+00  7.43183666e-01  5.44968975e+00
  -1.72811361e+00  1.86073292e+00  3.09163204e+00 -1.94922094e+00
   2.64847909e+00 -6.88195262e-01  2.22388547e+00  1.97057624e+00
   5.88079359e-01  1.49109809e+00  1.98132481e+00  7.31652270e+00
   5.55390384e+00 -8.38076722e-02 -4.22346246e-01  2.21469971e+00
  -7.09657794e-01  2.24986658e+00  8.39244453e-01  3.54133883e+00
   1.38451011e+00 -1.88493574e+00  3.88535760e+00  2.31579477e+00
   5.94330873e+00 -5.55175152e-01  3.48523609e+00  3.42250302e+00
   2.32546036e+00  3.90057073e+00  1.76364888e+00 -7.34929911e-01
   3.24799019e+00  1.63696638e-01  4.77714752e-01  6.08337688e-01]]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/tmp/babel-ujb6oX/python-iVUgdi", line 2, in <module>
    tpsource.plot_2d(X_rand_clown, Y_rand_clown) 
  File "/home/thomas/Documents/Telecom/cours/Machine Learning (MDI 343)/TP/tpperceptronsource.py", line 176, in plot_2d
    s=80, marker=symlist[label_num])
IndexError: list index out of range
#+end_example
